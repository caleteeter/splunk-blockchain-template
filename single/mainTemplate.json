{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for naming of resources that will be deployed.  This should be less than 6 characters in length, including lower case alpha and numbers only."
            },
            "maxLength": 6
        },
        "authType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication type for SSH access"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator username of the deployed VM (alphanumeric characters only)"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Administrator password for the deployed VM"
            }
        },
        "adminSSHKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "SSH RSA public key file as string"
            }
        },
        "vmStoragePerformance": {
            "type": "string",
            "defaultValue": "Premium",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Storage performance level for the deployed VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "Size of the virtual machine used for the deployed VM"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Region that the resources will be deployed to"
            }
        }
    },
    "variables": {
        "apiVersionDeployments": "2019-10-01",
        "apiVersionPublicIPAddresses": "2019-11-01",
        "apiVersionNetworkSecurityGroups": "2019-11-01",
        "apiVersionVirtualNetworks": "2019-11-01",
        "apiVersionVirtualMachine": "2019-07-01",
        "apiVersionNetworkInterfaces": "2019-11-01",
        "apiVersionVirtualMachineExtensions": "2019-07-01",
        "namePrefix": "[toLower(substring(concat(parameters('prefix'), uniqueString(resourceGroup().id)), 0, 9))]",
        "adminPasswordOrSSHKey": "[if(equals(parameters('authType'), 'password'), parameters('adminPassword'), parameters('adminSSHKey'))]",
        "sshPort": 22,
        "webPort": 18000,
        "dnsName": "[variables('namePrefix')]",
        "vnet": {
            "name": "[concat(variables('namePrefix'), '-vnet')]",
            "addressSpacePrefix": "10.52.0.0/16"
        },
        "subnetName": "[concat(variables('namePrefix'), 'subnet')]",
        "subnetPrefix": "10.52.0.0/24",
        "subnetPropertiesArray": [
            {
                "name": "[variables('subnetName')]",
                "properties": {
                    "addressPrefix": "[variables('subnetPrefix')]"
                }
            }
        ],
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet').name, variables('subnetName'))]",
        "nsgName": "[concat(variables('namePrefix'), '-nsg')]",
        "nicName": "[concat(variables('namePrefix'), '-nic')]",
        "publicIpName": "[concat(variables('namePrefix'), '-pip')]",
        "dockerRepository": "##DOCKER_REPO##",
        "dockerLogin": "##DOCKER_LOGIN##",
        "dockerPassword": "##DOCKER_PASSWORD",
        "dockerImage": "##DOCKER_IMAGE##",
        "vmImage": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
        },
        "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[variables('adminPasswordOrSSHKey')]"
                    }
                ]
            }
        },
        "artifactsLocation": "https://ctcorestr.blob.core.windows.net/splunkassets/",
        "artifactsLocationSasToken": "",
        "trackingGuid": "97C69D82-6C87-4EF1-9106-1567FF01CAB3"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionDeployments')]",
            "name": "[variables('trackingGuid')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionPublicIPAddresses')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetworkSecurityGroups')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('sshPort')]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-web",
                        "properties": {
                            "description": "Allow Web",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[variables('webPort')]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersionVirtualNetworks')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnet').name]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet').addressSpacePrefix]"
                    ]
                },
                "subnets": "[variables('subnetPropertiesArray')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetworkInterfaces')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('namePrefix'), '-nic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnet').name)]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceid('Microsoft.Network/publicIpAddresses', variables('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "primary": true
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionVirtualMachine')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('namePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('namePrefix'), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('dnsName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[variables('adminPasswordOrSSHKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": "[variables('vmImage')]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[concat(parameters('vmStoragePerformance'), '_LRS')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefix'), '-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersionVirtualMachineExtensions')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('namePrefix'), '/extensionScript')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('namePrefix'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(variables('artifactsLocation'), concat('scripts/config.sh', variables('artifactsLocationSasToken')))]",
                        "[uri(variables('artifactsLocation'), concat('scripts/quorum.tar.gz', variables('artifactsLocationSasToken')))]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('/bin/bash config.sh \"', parameters('adminUsername'), '\" \"', variables('artifactsLocation'), '\" \"', variables('artifactsLocationSasToken'), '\" \"', variables('dockerRepository'), '\" \"', variables('dockerLogin'), '\" \"', variables('dockerPassword'), '\" \"', variables('dockerImage'), '\"')]"
                }
            }
        }
    ],
    "outputs": {
        "splunk-admin-site": {
            "type": "string",
            "value": "[concat('http://', reference(variables('publicIpName')).dnsSettings.fqdn, ':18000')]"
        }
    }
}